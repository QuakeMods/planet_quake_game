<?xml version="1.0"?>
<classes>
<list name="colorIndex">
  <item name="white" value="0"/>
  <item name="red" value="1"/>
  <item name="green" value="2"/>
  <item name="yellow" value="3"/>
  <item name="blue" value="4"/>
  <item name="cyan" value="5"/>
  <item name="magenta" value="6"/>
  <item name="white2" value="7"/>
</list>
<list name="weapon_grapplinghook_types">
  <item name="Quake3" value="0"/>
  <item name="Tarzan" value="1"/>
  <item name="Pendulum" value="2"/>
  <item name="Quake2" value="3"/>
</list>
<group name="_decal" color="0 1.0 0">
-------- KEYS --------
<target key="target" name="Target">The name of the entity targeted for projection.</target>
-------- NOTES --------
Compiler-only entity that specifies a decal to be projected. Should contain 1 or more patch meshes (curves) and target an info_null entity. Patch mesh should be using a shader with "polygonoffset" (or other blending methods) or z-fighting will occur. The distance between the center of the _decal entity and the target is the axis and distance of projection.
</group>
<point name="_skybox" color="0.77 0.88 1.0" box="-4 -4 -4 4 4 4">
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Rotation angle of the sky surfaces.</angle>
<angles key="angles" name="Pitch Yaw Roll">Individual control of PITCH, YAW, and ROLL (default 0 0 0).</angles>
<real key="_scale" name="Scale" value="64">Scaling factor (default 64), good values are between 50 and 300, depending on the map.</real>
-------- NOTES --------
Compiler-only entity that specifies the origin of a skybox (a wholly contained, separate area of the map), similar to some games portal skies. When compiled with Q3Map2, the skybox surfaces will be visible from any place where sky is normally visible. It will cast shadows on the normal parts of the map, and can be used with cloud layers and other effects.
</point>
<point name="ammo_bfg" color=".3 .3 1" box="-16 -16 -16 16 16 16" model="models/powerups/ammo/bfgam.md3">
BFG ammo. Gives the player 15 by default.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="40">Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="15">Sets the amount of ammo given to the player when picked up (default 15).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="ammo_bullets" color=".3 .3 1" box="-16 -16 -16 16 16 16" model="models/powerups/ammo/machinegunam.md3">
Machine Gun ammo. Gives the player 50 by default.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="40">Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="50">Sets the amount of ammo given to the player when picked up (default 50).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="ammo_cells" color=".3 .3 1" box="-16 -16 -16 16 16 16" model="models/powerups/ammo/plasmaam.md3">
Plasma Gun ammo. Gives the player 30 by default.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="40">Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="30">Sets the amount of ammo given to the player when picked up (default 30).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="ammo_grenades" color=".3 .3 1" box="-16 -16 -16 16 16 16" model="models/powerups/ammo/grenadeam.md3">
Grenade Launcher ammo. Gives the player 5 by default.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="40">Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="5">Sets the amount of ammo given to the player when picked up (default 5).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="ammo_lightning" color=".3 .3 1" box="-16 -16 -16 16 16 16" model="models/powerups/ammo/lightningam.md3">
Lightning Gun ammo. Gives the player 60 by default.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="40">Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="60">Sets the amount of ammo given to the player when picked up (default 60).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="ammo_rockets" color=".3 .3 1" box="-16 -16 -16 16 16 16" model="models/powerups/ammo/rocketam.md3">
Rocket Launcher ammo. Gives the player 5 by default.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="40">Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="5">Sets the amount of ammo given to the player when picked up (default 5).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="ammo_shells" color=".3 .3 1" box="-16 -16 -16 16 16 16" model="models/powerups/ammo/shotgunam.md3">
Shotgun ammo. Gives the player 10 by default.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="40">Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="10">Sets the amount of ammo given to the player when picked up (default 10).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="ammo_slugs" color=".3 .3 1" box="-16 -16 -16 16 16 16" model="models/powerups/ammo/railgunam.md3">
Railgun ammo. Gives the player 10 by default.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="40">Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="10">Sets the amount of ammo given to the player when picked up (default 10).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<group name="func_bobbing" color="0 .4 1">
Solid entity that oscillates back and forth in a linear motion. By default, it will have an amount of displacement in either direction equal to the dimension of the brush in the axis in which it's bobbing. Entity bobs on the Z axis (up-down) by default. It can also emit sound if the "noise" key is set. Will crush the player when blocked.
-------- KEYS --------
<real key="speed" name="Bob Cycle Time" value="4">Amount of time in seconds for one complete oscillation cycle (default 4).</real>
<real key="height" name="Vertical Travel" value="32">Sets the amount of travel of the oscillation movement (default 32).</real>
<real key="phase" name="Bob Cycle Phase" value="0">Sets the start offset of the oscillation cycle. Values must be 0 &lt; phase &lt; 1. Any integer phase value is the same as no offset (default 0).</real>
<sound key="noise" name="Sound File">Path/name of .wav file to play. Use looping sounds only (e.g. sound/world/drone6.wav - see notes).</sound>
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/jets/jets01.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
-------- Q3MAP2 KEYS --------
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- SPAWNFLAGS --------
<flag key="X_AXIS" name="X Axis" bit="0">Entity will bob along the X axis.</flag>
<flag key="Y_AXIS" name="Y Axis" bit="1">Entity will bob along the Y axis.</flag>
-------- NOTES --------
In order for the sound to be emitted from the entity, it is recommended to include a brush with an origin shader at its center, otherwise the sound will not follow the entity as it moves. When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
</group>
<group name="func_button" color="0 .4 1">
When a button is touched by a player, it moves in the direction set by the "angle" key, triggers all its targets, stays pressed by an amount of time set by the "wait" key, then returns to it's original position where it can be operated again.
-------- KEYS --------
<direction key="angle" name="Direction">Determines the direction in which the button will move (up = -1, down = -2).</direction>
<angles key="angles" name="Pitch Yaw Roll">Pitch and yaw moving direction angles of button (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">All entities with a matching targetname will be triggered.</target>
<targetname key="targetname" name="Target Name">If set, other entities can be used to activate the button along with touch or damage way of doing this.</targetname>
<sound key="noise" name="Sound File">Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).</sound>
<real key="speed" name="Move Speed" value="40">Speed of button's displacement (default 40, -1 = reach the end of move instantly).</real>
<real key="wait" name="Return Delay" value="1">Number of seconds button stays pressed (default 1, -1 = return immediately).</real>
<real key="lip" name="Lip" value="4">Lip remaining at end of move. Default value is 4, which results in 2u of physical lip. I.e. for wished amount of move set key to [size + 2 - amount], 2 for full move, [size + 2] for none.</real>
<boolean key="health" name="Activate On Damage">If set to any non-zero value, the button must take damage (any amount) to activate (default 0).</boolean>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/pipe/pipe02.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
-------- Q3MAP2 KEYS --------
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- NOTES --------
When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</group>
<group name="func_door" color="0 .4 1">
Normal sliding door entity. By default, the door will activate when player walks close to it or when damage is inflicted to it.
-------- KEYS --------
<direction key="angle" name="Direction">Determines the opening direction of door (up = -1, down = -2).</direction>
<angles key="angles" name="Pitch Yaw Roll">Pitch and yaw opening direction angles of door (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">All entities with a matching targetname will be triggered.</target>
<targetname key="targetname" name="Target Name">If set, a func_button or trigger is required to activate the door (unless using health key).</targetname>
<real key="speed" name="Move Speed" value="400">Determines how fast the door moves (default 400, -1 = reach the end of move instantly).</real>
<real key="wait" name="Return Delay" value="2">Number of seconds before door returns (default 2, -1 = return immediately, -2 return only when triggered again)</real>
<real key="lip" name="Lip" value="8">Lip remaining at end of move. Default value is 8, which results in 6u of physical lip. I.e. for wished amount of move set key to [size + 2 - amount], 2 for full move, [size + 2] for none.</real>
<boolean key="health" name="Activate On Damage">If set to any non-zero value, the door must take damage (any amount) to activate (default 0).</boolean>
<integer key="dmg" name="Damage Inflicted" value="2">Damage to inflict on player when he blocks operation of door (default 2). Door will reverse direction when blocked unless CRUSHER spawnflag is set.</integer>
<string key="team" name="Team Name">Assign the same team name to multiple doors that should operate together (see notes).</string>
<sound key="startsound" name="Start Sound File">Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).</sound>
<sound key="endsound" name="End Sound File">Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).</sound>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/pipe/pipe02.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
-------- Q3MAP2 KEYS --------
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- SPAWNFLAGS --------
<flag key="START_OPEN" name="Start Open" bit="0">The door will spawn in the open state and operate in reverse.</flag>
<flag key="NULL" name="NULL1" bit="1">UNUSED</flag>
<flag key="CRUSHER" name="Crusher" bit="2">Door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way.</flag>
<flag key="NULL" name="NULL2" bit="3">UNUSED</flag>
<flag key="LOCKED" name="Locked" bit="4">If the Locked Spawnflag is set the player needs to open the door the first time by a holdable_key.</flag>
<flag key="SILENT" name="Silent" bit="5">Door will be silent.</flag>
-------- NOTES --------
Set a return delay of '-2' to keep the door open until it gets triggered again. This should be only done when the door is opened by some activating trigger.
Unlike in Quake 2, doors that touch are NOT automatically teamed. If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname"). Note: func_door and func_plat targeted by a misc_model will also require a trigger_* entity with the same target key/value as the model.

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</group>
<group name="func_door_rotating" color="0 .4 1">
This is the rotating door... just as the name suggests it's a door that rotates
-------- KEYS --------
<direction key="angle" name="Direction">Determines the opening direction of door (up = -1, down = -2).</direction>
<angles key="angles" name="Pitch Yaw Roll">Pitch and yaw opening direction angles of door (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">All entities with a matching targetname will be triggered.</target>
<targetname key="targetname" name="Target Name">If set, a func_button or trigger is required to activate the door (unless using health key).</targetname>
<real key="speed" name="Move Speed" value="120">how fast the door will open (degrees/second).</real>
<real key="distance" name="Distance" value="90">how many degrees the door will open.</real>
<real key="wait" name="Return Delay" value="2">Number of seconds before door returns (default 2, -1 = return immediately, -2 return only when triggered again)</real>
<real key="lip" name="Lip" value="8">Lip remaining at end of move. Default value is 8, which results in 6u of physical lip. I.e. for wished amount of move set key to [size + 2 - amount], 2 for full move, [size + 2] for none.</real>
<boolean key="health" name="Activate On Damage">If set to any non-zero value, the door must take damage (any amount) to activate (default 0).</boolean>
<integer key="dmg" name="Damage Inflicted" value="2">Damage to inflict on player when he blocks operation of door (default 2). Door will reverse direction when blocked unless CRUSHER spawnflag is set.</integer>
<string key="team" name="Team Name">Assign the same team name to multiple doors that should operate together (see notes).</string>
<sound key="startsound" name="Start Sound File">Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).</sound>
<sound key="endsound" name="End Sound File">Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).</sound>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/pipe/pipe02.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
-------- Q3MAP2 KEYS --------
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- SPAWNFLAGS --------
<flag key="START_OPEN" name="Start Open" bit="0">The door will spawn in the open state and operate in reverse.</flag>
<flag key="CRUSHER" name="Crusher" bit="1">Door will not reverse direction when blocked and will keep damaging player until he dies or gets out of the way.</flag>
<flag key="TOGGLE" name="Toggle" bit="2">wait in both the start and end states for a trigger event.</flag>
<flag key="REVERSE" name="Reverse" bit="3">if you want the door to open in the other direction, use this switch.</flag>
<flag key="X_AXIS" name="X_AXIS" bit="4">open on the X-axis instead of the Z-axis.</flag>
<flag key="Y_AXIS" name="Y_AXIS" bit="5">open on the Y-axis instead of the Z-axis.</flag>
<flag key="LOCKED" name="Locked" bit="6">If the Locked Spawnflag is set the player needs to open the door the first time by a holdable_key.</flag>

-------- NOTES --------
Set a return delay of '-2' to keep the door open until it gets triggered again. This should be only done when the door is opened by some activating trigger.

You need to have an origin brush as part of this entity.  The center of that brush will be
the point around which it is rotated. It will rotate around the Z axis by default.  You can
check either the X_AXIS or Y_AXIS box to change that.

Unlike in Quake 2, doors that touch are NOT automatically teamed. If you want doors to operate together, you have to team them manually by assigning the same team name to all of them. When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname"). Note: func_door and func_plat targeted by a misc_model will also require a trigger_* entity with the same target key/value as the model.

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</group>
<group name="func_group" color="0 .4375 .7">
This is not an entity as such. It is strictly an editor utility to group world brushes and patches together for convenience (selecting, moving, copying, applying special compilation parameters etc). You cannot group entities with this. Func_group contents is merged into worldspawn entity during compilation process.
-------- Q3MAP2 KEYS --------
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="1">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- NOTES --------
To make a func_group into a terrain entity, refer to the Terrain Construction documentation.
</group>
<group name="func_pendulum" color="0 .4 1">
Solid entity that describes a pendulum back and forth rotation movement. Rotates on the X axis by default. Pendulum frequency is a physical constant based on the height of the entity and gravity. Blocking the pendulum instantly kills a player.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Angle offset of axis of rotation from default X axis (default 0).</angle>
<angles key="angles" name="Pitch Yaw Roll">Pitch, yaw and roll offsets of axis of rotation from default X axis (default 0 0 0).</angles>
<real key="speed" name="Max Swing Angle" value="30">Angle of swing arc in either direction from initial position (default 30).</real>
<real key="phase" name="Swing Phase" value="0">Sets the start offset of the swinging cycle. Values must be 0 &lt; phase &lt; 1. Any integer phase value is the same as no offset (default 0).</real>
<sound key="noise" name="Sound File">Path/name of .wav file to play. Use looping sounds only (e.g. sound/world/drone6.wav).</sound>
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/jets/jets01.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
-------- Q3MAP2 KEYS --------
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- NOTES --------
You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes. When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
</group>
<group name="func_plat" color="0 .4 1">
Rising platform the player can ride to reach higher places. Plats must always be drawn in the raised position, so they will operate and be lighted correctly but they spawn in the lowered position (which equals to behavior of func_door with START_OPEN flag set). The plat will stay in the raised position until the player steps off.
-------- KEYS --------
<real key="speed" name="Move Speed" value="200">Determines how fast the plat moves (default 200, -1 = reach the end of move instantly).</real>
<real key="lip" name="Lip" value="8">Lip remaining at start of move. Default value is 8, which results in 6u of physical lip. I.e. for wished amount of move set key to [size + 2 - amount], 2 for full move, [size + 2] for none. Has no effect if "height" is set.</real>
<real key="height" name="Vertical Travel">Sets the total amount of vertical travel of the plat. It's convenient alternative to "lip" key (overrides one).</real>
<integer key="dmg" name="Damage Inflicted" value="2">Damage to inflict on player when he blocks operation of plat (default 2). Plat will reverse direction when blocked.</integer>
<sound key="startsound" name="Start Sound File">Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).</sound>
<sound key="endsound" name="End Sound File">Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).</sound>
<target key="target" name="Target">All entities with a matching targetname will be triggered.</target>
<targetname key="targetname" name="Target Name">If set, the trigger that points to this will raise the plat each time it fires. The plat raises and comes back down a second later if no player is on it.</targetname>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/pipe/pipe02.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
-------- Q3MAP2 KEYS --------
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- NOTES --------
May also be descending platform with negative "height" or according "lip" keys set.

When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname"). Note: func_door and func_plat targeted by a misc_model will also require a trigger_* entity with the same target key/value as the model.

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</group>
<group name="func_rotating" color="0 .4 1">
Solid entity that rotates. It can be triggered to either start or stop moving. Rotates on the Z axis by default and requires an origin brush.
-------- KEYS --------
<real key="speed" name="Rotation Speed" value="100">Determines how fast entity rotates (default = 100 degrees per second).</real>
<sound key="noise" name="Sound File">Path/name of .wav file to play. Use looping sounds only (e.g. sound/world/drone6.wav).</sound>
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/bitch/fembotbig.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
-------- Q3MAP2 KEYS --------
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- SPAWNFLAGS --------
<flag key="X_AXIS" name="X Axis" bit="2">Entity will rotate along the X axis.</flag>
<flag key="Y_AXIS" name="Y Axis" bit="3">Entity will rotate along the Y axis.</flag>
-------- NOTES --------
You need to have an origin brush as part of this entity. The center of that brush will be the point through which the rotation axis passes. It will rotate along the Z axis by default. You can check either the X_AXIS or Y_AXIS box to change that. When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
</group>
<group name="func_breakable" color="0 .4 1">
Solid entity that can be destroyed by inflicting damage.
-------- KEYS --------
<integer key="health" name="Health">Number of Healthpoints of the brush until it breaks, see NOTES!</integer>
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/bitch/fembotbig.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
<target key="target" name="Target">All entities with a matching targetname will be triggered.</target>
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
-------- Q3MAP2 KEYS --------
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- NOTES --------
If the breakable is supposed to break by an activating entity (like a button for example) it's important to set the breakables 'health' key to '0' else any other damage from weapons can break the entity too.
When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush.
Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
</group>
<group name="func_static" color="0 .4 1">
Static bspmodel. Can be used for conditional walls and models.
-------- KEYS --------
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/bitch/fembotbig.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
<targetname key="targetname" name="Target Name">NOT SUPPORTED BY RENDERER - if set, a func_button or trigger can make entity disappear from the game (see notes).</targetname>
-------- Q3MAP2 KEYS --------
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- NOTES --------
When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush. If a model is included with a targeted func_static, the brush(es) of the entity will be removed from the game but the .md3 model won't: It will automatically be moved to the (0 0 0) world origin so you should NOT include an .md3 model to a targeted func_static.

Because the map has only a single bot navigation file, func_static cannot be used to make significant changes in game play flow between differing game types.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
</group>
<point name="func_timer" color="0 .4 1" box="-8 -8 -8 8 8 8">
Time delay trigger that will continuously fire its targets after a preset time delay. The time delay can also be randomized. When triggered, the timer will toggle on/off.
-------- KEYS --------
<real key="wait" name="Time Period" value="1">Delay in seconds between each triggering of its targets (default 1).</real>
<real key="random" name="Time Period Variance" value="1">Random time variance in seconds added or subtracted from "wait" delay (default 1 - see notes).</real>
<target key="target" name="Target">This points to the entities to trigger.</target>
<targetname key="targetname" name="Target Name">A func_button or trigger that points to this will toggle the timer on/off when activated.</targetname>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
-------- SPAWNFLAGS --------
<flag key="START_ON" name="Start On" bit="0">Timer will start on in the game and continuously fire its targets.</flag>
-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</point>
<group name="func_train" color="0 .4 1">
Trains are moving solids that follow a looped string of path_corner entities. Trains in Q3A are very basic, they also require an origin brush (see notes).
-------- KEYS --------
<real key="speed" name="Move Speed" value="100">Speed of displacement of train (default 100 or overridden by speed value of path).</real>
<target key="target" name="Target">This points to the first path_corner of the path which is also the spawn location of the train's origin.</target>
<model key="model2" name="Model File">Path/name of model to include (.md3 files only, e.g. models/mapobjects/pipe/pipe02.md3).</model>
<real key="light" name="Model Light Intensity" value="0">Diameter of constant light of .md3 model, included with entity (default 0, range 0 - 1024).</real>
<color key="color" name="Model Light Color" value="1 1 1">Color of constant light of .md3 model, included with entity (default 1 1 1).</color>
-------- Q3MAP2 KEYS --------
<targetname key="targetname" name="Target Name">Used to attach a misc_model entity to this entity.</targetname>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in this entity (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="0">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
-------- NOTES --------
1. Trains always start on in the game.
2. Trains do not damage the played when blocked.
3. Trains cannot emit sound.
4. Trains are not triggerable or toggle-able.
5. Trains cannot be block-stopped just by getting in their way, the player must be wedged between the train and another obstacle to block it.

You need to have an origin brush as part of this entity. When using the model2 key, the origin point of the model will correspond to the origin point defined by the origin brush.

Target this entity with a misc_model to have the model attached to the entity (set the model's "target" key to the same value as this entity's "targetname").
</group>
<point name="holdable_medkit" color=".7 0 1" box="-16 -16 -16 16 16 16" model="models/powerups/holdable/medkit.md3">
Medkit that can be picked up and used later. Brings the player's health back to 100 when used. Player can only carry one holdable item at a time.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="60">Time in seconds before item respawns after being picked up (default 60, -1 = never respawn).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="info_player_intermission" color="1 0 1" box="-16 -16 -16 16 16 16">
Camera for intermission screen between matches. Can be aimed by setting the "angle", "angles" keys or by targeting an aiming entity. Use only one per level.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw angle of sight direction.</angle>
<angles key="angles" name="Pitch Yaw Roll">Alternate "pitch, yaw, roll" angles method of aiming intermission camera (default 0 0 0).</angles>
<target key="target" name="Target">Point this to an info_notnull or target_position entity to set the camera's pointing angles.</target>
</point>
<point name="info_player_start" color="1 1 1" box="-16 -16 -24 16 16 32">
Player spawn location.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Direction in which player will look when spawning in the game.</angle>
<angles key="angles" name="Pitch Yaw Roll">Pitch, yaw and roll angles of sight direction.</angles>
<target key="target" name="Target">This can point at a target_give entity for respawn freebies or to anything else to trigger.</target>
<flag key="REVERSE" name="Reverse Mode Spawn Point" bit="0">This spawnpoint will be used when dfx_inversemap is enabled.</flag>
</point>
<point name="info_player_red" color="1 0 0" box="-16 -16 -24 16 16 32">
Red Player spawn location for Gametype 'Teamrun'
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Direction in which player will look when spawning in the game.</angle>
<angles key="angles" name="Pitch Yaw Roll">Pitch, yaw and roll angles of sight direction.</angles>
<target key="target" name="Target">This can point at a target_give entity for respawn freebies or to anything else to trigger.</target>
</point>
<point name="info_player_blue" color="0 0 1" box="-16 -16 -24 16 16 32">
Blue Player spawn location for Gametype 'Teamrun'
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Direction in which player will look when spawning in the game.</angle>
<angles key="angles" name="Pitch Yaw Roll">Pitch, yaw and roll angles of sight direction.</angles>
<target key="target" name="Target">This can point at a target_give entity for respawn freebies or to anything else to trigger.</target>
</point>
<point name="info_player_green" color="0 1 0" box="-16 -16 -24 16 16 32">
Green Player spawn location for Gametype 'Teamrun'
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Direction in which player will look when spawning in the game.</angle>
<angles key="angles" name="Pitch Yaw Roll">Pitch, yaw and roll angles of sight direction.</angles>
<target key="target" name="Target">This can point at a target_give entity for respawn freebies or to anything else to trigger.</target>
</point>
<point name="info_player_yellow" color="1 1 0" box="-16 -16 -24 16 16 32">
Yellow Player spawn location for Gametype 'Teamrun'
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Direction in which player will look when spawning in the game.</angle>
<angles key="angles" name="Pitch Yaw Roll">Pitch, yaw and roll angles of sight direction.</angles>
<target key="target" name="Target">This can point at a target_give entity for respawn freebies or to anything else to trigger.</target>
</point>
<point name="item_armor_body" color=".6 0 0" box="-16 -16 -16 16 16 16" model="models/powerups/armor/armor_red.md3">
Red Armor - 100 points. All armor can be cumulated up to a maximum of 200 points and slowly wears out to 100 points.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="25">Time in seconds before item respawns after being picked up (default 25, -1 = never respawn).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_armor_combat" color="1 .75 .3" box="-16 -16 -16 16 16 16" model="models/powerups/armor/armor_yel.md3">
Yellow Armor - 50 points. All armor can be cumulated up to a maximum of 200 points and slowly wears out to 100 points.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="25">Time in seconds before item respawns after being picked up (default 25, -1 = never respawn).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_armor_shard" color="0 .7 0" box="-16 -16 -16 16 16 16" model="models/powerups/armor/shard.md3">
Green Armor Shard - 5 points. All armor can be cumulated up to a maximum of 200 points and slowly wears out to 100 points.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="25">Time in seconds before item respawns after being picked up (default 25, -1 = never respawn).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_enviro" color=".5 0 1" box="-16 -16 -16 16 16 16" model="models/powerups/instant/enviro.md3">
Battle Suit power-up - Gives protection against slime, lava and weapon splash damage. Lasts 30 seconds.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="120">Time in seconds before item respawns after being picked up (default 120, -1 = never respawn).</real>
<real key="count" name="Powerup Duration" value="30">Time in seconds power-up will last when picked up (default 30).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_flight" color=".5 0 1" box="-16 -16 -16 16 16 16" model="models/powerups/instant/flight.md3">
Flight power-up. Lasts 60 seconds.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="120">Time in seconds before item respawns after being picked up (default 120, -1 = never respawn).</real>
<real key="count" name="Powerup Duration" value="60">Time in seconds power-up will last when picked up (default 60).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_haste" color=".5 0 1" box="-16 -16 -16 16 16 16" model="models/powerups/instant/haste.md3">
Speed power-up. Makes player run at double speed for 30 seconds.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="120">Time in seconds before item respawns after being picked up (default 120, -1 = never respawn).</real>
<real key="count" name="Powerup Duration" value="30">Time in seconds power-up will last when picked up (default 30).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_health" color=".8 .8 0" box="-16 -16 -16 16 16 16" model="models/powerups/health/medium_cross.md3">
Yellow cross bubble - 25 Health. Cannot be picked up over 100 health.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="35">Time in seconds before item respawns after being picked up (default 35, -1 = never respawn).</real>
<real key="count" name="Health Given" value="25">Sets the amount of health points given to the player when item is picked up (default 25).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_health_large" color="1 0 0" box="-16 -16 -16 16 16 16" model="models/powerups/health/large_cross.md3">
Gold cross bubble - 50 Health. Cannot be picked up over 100 health.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="35">Time in seconds before item respawns after being picked up (default 35, -1 = never respawn).</real>
<real key="count" name="Health Given" value="50">Sets the amount of health points given to the player when item is picked up (default 50).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_health_mega" color="0 0 1" box="-16 -16 -16 16 16 16" model="models/powerups/health/mega_cross.md3">
Blue M bubble - 100 Health. Adds 100 health points to current health up to a maximum of 200.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="40">Time in seconds before item respawns after being picked up (default 40, -1 = never respawn).</real>
<real key="count" name="Health Given" value="100">Sets the amount of health points given to the player when item is picked up (default 100).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_health_small" color="0 1 0" box="-16 -16 -16 16 16 16" model="models/powerups/health/small_cross.md3">
Green cross bubble - 5 Health. Can be picked up over 100 health but slowly wears out to 100 afterwards.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="35">Time in seconds before item respawns after being picked up (default 35, -1 = never respawn).</real>
<real key="count" name="Health Given" value="5">Sets the amount of health points given to the player when item is picked up (default 5).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_invis" color=".5 0 1" box="-16 -16 -16 16 16 16" model="models/powerups/instant/invis.md3">
Invisibility power-up. Lasts 30 seconds.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="120">Time in seconds before item respawns after being picked up (default 120, -1 = never respawn).</real>
<real key="count" name="Powerup Duration" value="30">Time in seconds power-up will last when picked up (default 30).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_quad" color=".4 .6 1" box="-16 -16 -16 16 16 16" model="models/powerups/instant/quad.md3">
Quad Damage power-up. Lasts 30 seconds.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="120">Time in seconds before item respawns after being picked up (default 120, -1 = never respawn).</real>
<real key="count" name="Powerup Duration" value="30">Time in seconds power-up will last when picked up (default 30).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_regen" color=".5 0 1" box="-16 -16 -16 16 16 16" model="models/powerups/instant/regen.md3">
Health Regeneration power-up. This will boost your current health by 5 points every second for a period of up to 30 seconds or up to 200 points whichever comes first. Afterwards, any health points over 100 slowly wears out to 100.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="120">Time in seconds before item respawns after being picked up (default 120, -1 = never respawn).</real>
<real key="count" name="Powerup Duration" value="30">Time in seconds power-up will last when picked up (default 30).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="item_key" color=".7 0 1" box="-16 -16 -16 16 16 16" model="models/powerups/holdable/silverkey.md3">
A silver key to open a locked door. Once picked up it won't respawn. A Player can hold up to 9 keys. A locked door only needs a key once.
-------- KEYS --------
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
-------- NOTES -------------
The key item should only be used in GT_ADVENTURE or GT_TEAMRUN since a once unlocked door will stay unlocked until a map_restart will be performed.
</point>
<point name="light" color=".65 .65 1" box="-8 -8 -8 8 8 8">
Non-displayed point light source. The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.
-------- Q3MAP2 KEYS --------
<real key="light" name="Light Intensity" value="300">Overrides the default 300 intensity. Negative values may be used for negative lights.</real>
<color key="_color" name="Light Color" value="1 1 1">Weighted RGB value of light color (default 1.0 1.0 1.0 = white).</color>
<target key="target" name="Target">Lights pointed at a target (info_null / target_position) will be spotlights.</target>
<real key="radius" name="Spotlight Radius" value="64">Overrides the default 64 unit radius of a spotlight at the target point.</real>
<boolean key="_sun" name="Sun">Set this key to 1 on a spotlight to make an infinite sun light.</boolean>
<real key="fade" name="Linear Fade" value="1">Fades light attenuation. Only affects linear lights.</real>
<real key="scale" name="Intensity Scale" value="1">Scales the "light" value.</real>
<real key="_deviance" name="Penumbra Deviance" value="0">Penumbra effect - distance measured in world units for point/spot lights, and degrees for suns (~0.5-3).</real>
<integer key="_samples" name="Penumbra Samples" value="1">Penumbra effect - the number of random jitters distributed over the solid arc (~16).</integer>
<boolean key="_filter" name="Lightmap Filtering">Set this key to 1 to toggle on lightmap filtering.</boolean>
<real key="_filterradius" name="Filter Radius">Filters lightmaps within set radius.</real>
<real key="_anglescale" name="Light Attenuation Scale" value="1">Scales light attenuation. Smaller values lessens angle attenuation, larger values for sharper, more faceted lighting (default 1.0).</real>
<integer key="style" name="Light Style Index">Light style index number associated with worldspawn light style. Values are between 1 and 31.</integer>
-------- SPAWNFLAGS --------
<flag key="LINEAR" name="Linear Falloff" bit="0">Use a linear falloff. Default is inverse distance squared (more realistic).</flag>
<flag key="NOANGLE" name="No Angle Attenuation" bit="1">Ignore angle attenuation.</flag>
<flag key="NOGRIDLIGHT" name="Not Dynamic" bit="4">Do not affect the lightgrid (dynamic entity lighting).</flag>
</point>
<point name="lightJunior" color="0 0.7 0.3" box="-6 -6 -6 6 6 6">
Non-displayed point light source THAT ONLY AFFECTS ENTITIES (lightgrid). The -pointscale and -scale arguments to Q3Map2 affect the brightness of these lights. The -skyscale argument affects brightness of entity sun lights.
-------- Q3MAP2 KEYS --------
<real key="light" name="Light Intensity" value="300">Overrides the default 300 intensity.</real>
<color key="_color" name="Light Color" value="1 1 1">Weighted RGB value of light color (default 1.0 1.0 1.0 = white).</color>
<target key="target" name="Target">Lights pointed at a target will be spotlights.</target>
<real key="radius" name="Spotlight Radius" value="64">Overrides the default 64 unit radius of a spotlight at the target point.</real>
<boolean key="_sun" name="Sun">Set this key to 1 on a spotlight to make an infinite sun light.</boolean>
<real key="fade" name="Linear Fade" value="1">Fades light attenuation. Only affects linear lights.</real>
<real key="scale" name="Intensity Scale" value="1">Scales the "light" value.</real>
-------- SPAWNFLAGS --------
<flag key="LINEAR" name="Linear Falloff" bit="0">Use a linear falloff. Default is inverse distance squared (more realistic).</flag>
<flag key="NOANGLE" name="No Angle Attenuation" bit="1">Ignore angle attenuation.</flag>
<flag key="NOGRIDLIGHT" name="Not Dynamic" bit="4">Do not affect the lightgrid (dynamic entity lighting). Setting this spawnflag will disable this light entirely.</flag>
</point>
<point name="misc_model" color="1 .5 .25" box="-16 -16 -16 16 16 16">
Generic placeholder for inserting models to map. Model triangles are baked to BSP.
MD3, ASE, 3DS, OBJ, FM, LWO, MD2, MDC, MS3D model formats are supported.
-------- Q3MAP2 KEYS --------
<model key="model" name="Model File">Path/name of model to use (e.g. models/mapobjects/teleporter/teleporter.md3).</model>
<angle key="angle" name="Yaw Angle">Direction in which model will be oriented.</angle>
<angles key="angles" name="Pitch Yaw Roll">Individual control of PITCH, YAW, and ROLL (default 0 0 0).</angles>
<real key="modelscale" name="Uniform Scale" value="1">Floating-point value used to scale a model up or down (default 1.0).</real>
<real3 key="modelscale_vec" name="Scale XYZ" value="1 1 1">Floating-point vector used to scale a model's axes individually (default 1.0 1.0 1.0).</real3>
<array key="_remap" name="Shader Remaps">Used to remap textures/shaders in the model. To remap all shaders to a given shader, use "*;models/mymodel/mytexture". To remap a specific shader, use "models/mymodel/old;models/mymodel/new". Any key starting with _remap prefix will work, so if you need more remappings, create _remap2, _remap3 etc keys.</array>
<target key="target" name="Target">Used to attach the misc_model to a brush entity, where its "targetname" key is the same value.</target>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on this model (if model is using lightmapped shaders) (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="1">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture>
<real key="_clipdepth" name="Autoclip thickness" value="2">Autoclip brushes thickness (default 2.0).</real>
-------- SPAWNFLAGS --------
<flag key="_RMG_BSP" name="_RMG_BSP" bit="0">in SoF2, append a _RMG_BSP suffix to shader names instead of _BSP</flag>
<flag key="CLIPMODEL" name="Clip Model" bit="1">Clips the model for player/weapon collisions; extruding every face along most perpendicular axial direction. For use on large architectural or terrain models, not for small decorative models.</flag>
<flag key="FORCEMETA" name="Force Meta" bit="2">Toggles on q3map_forceMeta for lightmapped models. Converts model triangles to bsp metasurfaces.</flag>
<flag key="EXTRUDE_FACE_NORMALS" name="EXTRUDE_FACE_NORMALS" bit="3">extrude along the model face normals for clipping</flag>
<flag key="EXTRUDE_TERRAIN" name="EXTRUDE_TERRAIN" bit="4">extrude each surface of the model along its average axial direction ( up/down/west/east/north/south ); faces with not matching direction (or too steep) are clipped in default mode</flag>
<flag key="COLOR_TO_ALPHA" name="COLOR_TO_ALPHA" bit="5">use the color value as alpha (for terrain blending)</flag>
<flag key="NOSMOOTH" name="NOSMOOTH" bit="6">Don't smooth normals when importing (forces all faces planar).</flag>
<flag key="EXTRUDE_VERTEX_NORMALS" name="EXTRUDE_VERTEX_NORMALS" bit="7">extrude along the model vertex normals for clipping; accurate collisions, if normals are fine; bad ones are replaced with 45 degrees to face</flag>
<flag key="PYRAMIDAL_CLIP" name="PYRAMIDAL_CLIP" bit="8">pyramidal clipping brushes (4-sided); accurate collisions</flag>
<flag key="EXTRUDE_DOWNWARDS" name="EXTRUDE_DOWNWARDS" bit="9">for horizontal terrain; when not possible, extrude in default mode</flag>
<flag key="EXTRUDE_UPWARDS" name="EXTRUDE_UPWARDS" bit="10">-//-</flag>
<flag key="MAX_EXTRUDE" name="MAX_EXTRUDE" bit="11">Extrude to the max/min point of every model surface to reduce bsp size (uses axial back plane)</flag>
<flag key="AXIAL_BACKPLANE" name="AXIAL_BACKPLANE" bit="12">use axial back plane for clipping brushes to effectively reduce bsp size; might cause unwanted collisions, make sure to -debugclip; negative _clipdepth / -clipdepth limits max thickness of resulting brushes (making non-axial backplane, if hit the limit)</flag>
other possible modes of clipping:
CLIPMODEL+AXIAL_BACKPLANE
EXTRUDE_FACE_NORMALS+PYRAMIDAL_CLIP - truncated pyramid with 45 degrees sides
EXTRUDE_TERRAIN+MAX_EXTRUDE
EXTRUDE_TERRAIN+AXIAL_BACKPLANE
EXTRUDE_VERTEX_NORMALS + PYRAMIDAL_CLIP - vertex normals mode: don't check for sides, sticking outwards
PYRAMIDAL_CLIP+AXIAL_BACKPLANE - pyramid with 3 of 4 sides axial (->small bsp)
EXTRUDE_DOWNWARDS+EXTRUDE_UPWARDS
EXTRUDE_DOWNWARDS+MAX_EXTRUDE
EXTRUDE_DOWNWARDS+AXIAL_BACKPLANE
EXTRUDE_DOWNWARDS+EXTRUDE_UPWARDS+MAX_EXTRUDE
EXTRUDE_DOWNWARDS+EXTRUDE_UPWARDS+AXIAL_BACKPLANE
EXTRUDE_UPWARDS+MAX_EXTRUDE
EXTRUDE_UPWARDS+AXIAL_BACKPLANE
</point>
<point name="misc_portal_camera" color="1 .5 .25" box="-8 -8 -8 8 8 8">
Portal camera. This camera is used to project its view onto a portal surface in the level through the intermediary of a misc_portal_surface entity. Use the "angle", "angles" keys or target a target_position or info_notnull entity to set the camera's pointing direction.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw aiming angle of the portal camera (default 0).</angle>
<angles key="angles" name="Pitch Yaw Roll">This sets the pitch and yaw aiming angles of the portal camera (default 0 0). Use "roll" key to set roll angle.</angles>
<target key="target" name="Target">Point this to a target_position entity to set the camera's pointing direction.</target>
<targetname key="targetname" name="Target Name">A misc_portal_surface portal surface indicator must point to this.</targetname>
<real key="roll" name="Roll" value="0">Roll angle of camera. For axial directions a value of 0 is upside down and 180 is the same as the player's view. For other sorts of directions values of 90 and -90 may work (inconsistent math).</real>
-------- SPAWNFLAGS --------
<flag key="SLOWROTATE" name="Rotate Slowly" bit="0">Makes the portal camera rotate slowly along the roll axis.</flag>
<flag key="FASTROTATE" name="Rotate Faster" bit="1">Makes the portal camera rotate faster along the roll axis.</flag>
<flag key="NOWOBBLE" name="No Wobble" bit="2">Stops the camera portal from wobbling.</flag>
-------- NOTES --------
Both the setting "angle(s)" key or "targeting a target_position" methods can be used to aim the camera. In both cases, the "roll" key must be used to set the roll angle. If either the SLOWROTATE or FASTROTATE spawnflag is set, then the "roll" value is irrelevant.
</point>
<point name="misc_portal_surface" color="1 .5 .25" box="-8 -8 -8 8 8 8">
Portal surface indicator. This will "lock on" the brush face closest to it and identify as a portal. The view displayed on the portal surface is the view of the misc_portal_camera that this entity targets. Also used for mirrors (see notes).
-------- KEYS --------
<target key="target" name="Target">Point this to a misc_portal_camera that "sees" the view you want to display on the portal.</target>
<boolean key="notfree" name="Hidden For FFA">When set to 1, entity will not spawn in "Free for all" and "Tournament" modes.</boolean>
<boolean key="notteam" name="Hidden For Teamplay">When set to 1, entity will not spawn in "Teamplay" and "CTF" modes.</boolean>
<boolean key="notsingle" name="Hidden For SP">When set to 1, entity will not spawn in Single Player mode (bot play mode).</boolean>
<string key="gametype" name="Game Type">Defines the gametypes that will spawn this item. Q3A values: ffa tournament single team ctf. Q3TA values: oneflag obelisk harvester teamtournament.</string>
-------- NOTES --------
The entity must be no farther than 64 units away from the portal surface to lock onto it.
To make a mirror, apply the common/mirror shader to the surface, place this entity near it but don't target a misc_portal_camera.
To make a portal, you need to use a shader with "alphagen portal", for instance textures/sfx/portal_sfx.
</point>
<point name="misc_teleporter_dest" color="1 .5 .25" box="-32 -32 -24 32 32 -16">
Teleport destination location point for trigger_teleporter and target_teleporter entities.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Direction in which player will look when teleported.</angle>
<angles key="angles" name="Pitch Yaw Roll">Pitch, yaw and roll angles of sight direction after teleportation.</angles>
<targetname key="targetname" name="Target Name">Trigger_teleporter or target_teleporter point to this.</targetname>
</point>
<point name="path_corner" color=".5 .3 0" box="-8 -8 -8 8 8 8">
Path corner entity that func_trains can be made to follow.
-------- KEYS --------
<target key="target" name="Target">Point to next path_corner in the path and optionally to an entity to trigger, when train reaches this entity.</target>
<targetname key="targetname" name="Target Name">The train following the path or the previous path_corner in the path points to this.</targetname>
<real key="speed" name="Move Speed">Speed of func_train while moving to the next path corner. This will override the speed value of the train.</real>
<real key="wait" name="Corner Delay" value="0">Number of seconds func_train will pause on path corner before moving to next path corner (default 0 - see notes).</real>
-------- NOTES --------
Setting the wait key to -1 will not make the train stop on the path corner, it will simply default to 0.
</point>
<point name="shooter_grenade" color="1 0 .5" box="-8 -8 -8 8 8 8">
This will shoot a grenade each time it's triggered. Aiming is done by setting the "angle", "angles" keys or by targeting an info_notnull, target_position or any other entity.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw aiming angle of shooter.</angle>
<angles key="angles" name="Pitch Yaw Roll">This sets the pitch and yaw aiming angles of shooter (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">This points to a target_position entity for aiming the grenades.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="random" name="Angle Variance" value="1">Random aiming variance in degrees (range 0 - 90, default 1 - see notes).</real>
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key / 2). Setting random key to 0 wont disable random, setting it to 180, 360 or 0.0000001 will do.

Both the setting "angle(s)" key or "targeting a target_position" methods can be used to aim the shooter.
</point>
<point name="shooter_grenade_targetplayer" color="1 0 .5" box="-8 -8 -8 8 8 8">
This will shoot a grenade each time it's triggered. Aiming is done by setting the "angle", "angles" keys or by targeting an info_notnull, target_position or any other entity. It may also target the player, and predict the player's velocity.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw aiming angle of shooter.</angle>
<angles key="angles" name="Pitch Yaw Roll">This sets the pitch and yaw aiming angles of shooter (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">This points to a target_position entity for aiming the grenades.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="random" name="Angle Variance" value="1">Random aiming variance in degrees (range 0 - 90, default 1 - see notes).</real>
<real key="speed" name="XY leading" value="0">Adjusts XY leading of player target.</real>
<real key="count" name="Z leading" value="0">Adjusts Z leading of player target.</real>
-------- SPAWNFLAGS --------
<flag key="TARGETPLAYER" name="TARGETPLAYER" bit="0">If set, will aim at player instead of normal target.</flag>
<flag key="PREDICT_XY" name="PREDICT_XY" bit="1">If set, will attempt to predict player's horizontal position.</flag>
<flag key="PREDICT_Z" name="PREDICT_Z" bit="2">If set, will attempt to predict player's vertical position. Only should use this if player will be in freefall, as it does not account for the player touching the ground.</flag>
<flag key="QUAD" name="QUAD" bit="3">Emit quadded grenades.</flag>
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key / 2). Setting random key to 0 wont disable random, setting it to 180, 360 or 0.0000001 will do.

Both the setting "angle(s)" key or "targeting a target_position" methods can be used to aim the shooter.
</point>
<point name="shooter_plasma" color="1 0 .5" box="-8 -8 -8 8 8 8">
This will shoot a plasma ball each time it's triggered. Aiming is done by setting the "angle", "angles" keys or by targeting an info_notnull, target_position or any other entity.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw aiming angle of shooter.</angle>
<angles key="angles" name="Pitch Yaw Roll">This sets the pitch and yaw aiming angles of shooter (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">This points to a target_position entity for aiming the plasma balls.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="random" name="Angle Variance" value="1">Random aiming variance in degrees (range 0 - 90, default 1 - see notes).</real>
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key / 2). Setting random key to 0 wont disable random, setting it to 180, 360 or 0.0000001 will do.

Both the setting "angle(s)" key or "targeting a target_position" methods can be used to aim the shooter.
</point>
<point name="shooter_plasma_targetplayer" color="1 0 .5" box="-8 -8 -8 8 8 8">
This will shoot a plasma ball each time it's triggered. Aiming is done by setting the "angles" key or by targeting an info_notnull, target_position or any other entity. It may also target the player, and predict the player's velocity.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw aiming angle of shooter.</angle>
<angles key="angles" name="Pitch Yaw Roll">This sets the pitch and yaw aiming angles of shooter (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">This points to a target_position entity for aiming the plasma balls.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="random" name="Angle Variance" value="1">Random aiming variance in degrees (range 0 - 90, default 1 - see notes).</real>
<real key="speed" name="XY leading" value="0">Adjusts XY leading of player target.</real>
<real key="count" name="Z leading" value="0">Adjusts Z leading of player target.</real>
-------- SPAWNFLAGS --------
<flag key="TARGETPLAYER" name="TARGETPLAYER" bit="0">If set, will aim at player instead of normal target.</flag>
<flag key="PREDICT_XY" name="PREDICT_XY" bit="1">If set, will attempt to predict player's horizontal position.</flag>
<flag key="PREDICT_Z" name="PREDICT_Z" bit="2">If set, will attempt to predict player's vertical position. Only should use this if player will be in freefall, as it does not account for the player touching the ground.</flag>
<flag key="QUAD" name="QUAD" bit="3">Emit quadded plasma.</flag>
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key / 2). Setting random key to 0 wont disable random, setting it to 180, 360 or 0.0000001 will do.

Both the setting "angle(s)" key or "targeting a target_position" methods can be used to aim the shooter.
</point>
<point name="shooter_rocket" color="1 0 .5" box="-8 -8 -8 8 8 8">
This will shoot a rocket each time it's triggered. Aiming is done by setting the "angle", "angles" keys or by targeting an info_notnull, target_position or any other entity.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw aiming angle of shooter.</angle>
<angles key="angles" name="Pitch Yaw Roll">This sets the pitch and yaw aiming angles of shooter (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">This points to a target_position entity for aiming the rockets.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="random" name="Angle Variance" value="1">Random aiming variance in degrees (range 0 - 90, default 1 - see notes).</real>
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key / 2). Setting random key to 0 wont disable random, setting it to 180, 360 or 0.0000001 will do.

Both the setting "angle(s)" key or "targeting a target_position" methods can be used to aim the shooter.
</point>
<point name="shooter_rocket_targetplayer" color="1 0 .5" box="-8 -8 -8 8 8 8">
This will shoot a rocket each time it's triggered. Aiming is done by setting the "angles" key or by targeting an info_notnull, target_position or any other entity. It may also target the player, and predict the player's velocity.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw aiming angle of shooter.</angle>
<angles key="angles" name="Pitch Yaw Roll">This sets the pitch and yaw aiming angles of shooter (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">This points to a target_position entity for aiming the rockets.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="random" name="Angle Variance" value="1">Random aiming variance in degrees (range 0 - 90, default 1 - see notes).</real>
<real key="speed" name="XY leading" value="0">Adjusts XY leading of player target.</real>
<real key="count" name="Z leading" value="0">Adjusts Z leading of player target.</real>
-------- SPAWNFLAGS --------
<flag key="TARGETPLAYER" name="TARGETPLAYER" bit="0">If set, will aim at player instead of normal target.</flag>
<flag key="PREDICT_XY" name="PREDICT_XY" bit="1">If set, will attempt to predict player's horizontal position.</flag>
<flag key="PREDICT_Z" name="PREDICT_Z" bit="2">If set, will attempt to predict player's vertical position. Only should use this if player will be in freefall, as it does not account for the player touching the ground.</flag>
<flag key="QUAD" name="QUAD" bit="3">Emit quadded rockets.</flag>
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key / 2). Setting random key to 0 wont disable random, setting it to 180, 360 or 0.0000001 will do.

Both the setting "angle(s)" key or "targeting a target_position" methods can be used to aim the shooter.
</point>
<point name="shooter_bfg" color="1 0 .5" box="-8 -8 -8 8 8 8">
This will shoot a BFG10K plasma each time it's triggered. Aiming is done by setting the "angle", "angles" keys or by targeting an info_notnull, target_position or any other entity. It may also target the player, and predict the player's velocity.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw aiming angle of shooter.</angle>
<angles key="angles" name="Pitch Yaw Roll">This sets the pitch and yaw aiming angles of shooter (default 0 0). The roll angle does not apply.</angles>
<target key="target" name="Target">This points to a target_position entity for aiming the BFG10K plasma.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="random" name="Angle Variance" value="1">Random aiming variance in degrees (range 0 - 90, default 1 - see notes).</real>
<real key="speed" name="XY leading" value="0">Adjusts XY leading of player target.</real>
<real key="count" name="Z leading" value="0">Adjusts Z leading of player target.</real>
-------- SPAWNFLAGS --------
<flag key="TARGETPLAYER" name="TARGETPLAYER" bit="0">If set, will aim at player instead of normal target.</flag>
<flag key="PREDICT_XY" name="PREDICT_XY" bit="1">If set, will attempt to predict player's horizontal position.</flag>
<flag key="PREDICT_Z" name="PREDICT_Z" bit="2">If set, will attempt to predict player's vertical position. Only should use this if player will be in freefall, as it does not account for the player touching the ground.</flag>
<flag key="QUAD" name="QUAD" bit="3">Emit quadded BFG10K plasma.</flag>
-------- NOTES --------
When the random key is set, its value is used to calculate a maximum angle deviation from the normal trajectory formed by a straight line between the shooter and the aiming entity it targets. The final trajectory will be a random value anywhere between no deviation at all (0) to maximum deviation (value of the random key / 2). Setting random key to 0 wont disable random, setting it to 180, 360 or 0.0000001 will do.

Both the setting "angle(s)" key or "targeting a target_position" methods can be used to aim the shooter.
</point>
<point name="target_delay" color="0 .7 .7" box="-8 -8 -8 8 8 8">
Time delay trigger intermediary. Like a target_relay, this can only be fired by other triggers which will cause it in turn to fire its own targets.
-------- KEYS --------
<target key="target" name="Target">This points to entities to activate when this entity is triggered.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="wait" name="Delay" value="1">Delay in seconds from when this gets triggered to when it fires its own targets (default 1).</real>
<real key="delay" name="Delay" value="1">Same as wait. For consistency, wait is preferred.</real>
<real key="random" name="Delay Variance" value="0">Random time variance in seconds added or subtracted from "wait" delay (default 0 - see notes).</real>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</point>
<point name="target_give" color="0 .5 0" box="-8 -8 -8 8 8 8">
This is used to give ammo, weapons, health or items to the player who activates it.
-------- KEYS --------
<target key="target" name="Target">This points to the item(s) to give when activated. These items aren't respawned in game.</target>
<targetname key="targetname" name="Target Name">Activating trigger or spawn entity points to this.</targetname>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
-------- NOTES --------
There are 2 ways to use this entity.
a) Automatically give items to players when they spawn in the game: Make a spawn location entity like info_player_deathmatch or CTF respawn, targeting this entity, then target it to the item(s) to give to the player upon respawn.
b) Give items to players during the game: Make a trigger_multiple/func_button/other_activatable_entity target this entity, then make it target the item(s) to give to the player when the trigger is touched.

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</point>
<point name="target_kill" color="0 .5 0" box="-8 -8 -8 8 8 8">
This will kill the player who activates the trigger that fires this target.
-------- KEYS --------
<targetname key="targetname" name="Target Name">The activating trigger points to this.</targetname>
</point>
<point name="target_laser" color="0 .5 0" box="-8 -8 -8 8 8 8">
Generates a colorized laser beam which can be toggled on/off. It also can play a looping sound and will hurt the player on touching.
******** KEYS ********
<angles key="angles" name="Pitch Yaw Roll">Alternate "pitch, yaw, roll" angles method of aiming laser (default 0 0 0)</angles>
<target key="target" name="Target">Point this to a target_position entity to set the laser's aiming direction.</target>
<targetname key="targetname" name="Target Name">The activating trigger points to this.</targetname>
<sound key="noise" name="Sound File">Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).</sound>
<color key="color" name="Color" value="1 0 0">Color of laser beam (default 1 0 0).</color>
<integer key="dmg" name="Damage">Number of points of damage inflicted to player per server frame (default 5 - integer values only).</integer>
******** SPAWNFLAGS ********
<flag key="START_ON" name="Start On" bit="0">When set, the laser will start on in the game.</flag>
</point>
<point name="target_position" color="0 .5 0" box="-8 -8 -8 8 8 8">
Aiming target for entities like light, misc_portal_camera and trigger_push (jump pads) in particular.
-------- KEYS --------
<targetname key="targetname" name="Target Name">The entity that requires an aiming direction points to this.</targetname>
-------- NOTES --------
To make a jump pad, place this entity at the highest point of the jump and target it with a trigger_push entity.
</point>
<point name="target_print" color="0 .5 0" box="-8 -8 -8 8 8 8">
This will print a message on the center of the screen when triggered. In Defrag, by default, only the activating client will see the message.
-------- KEYS --------
<string key="message" name="Message">Text string to print on screen.</string>
<targetname key="targetname" name="Target Name">The activating trigger points to this.</targetname>
-------- SPAWNFLAGS --------
<flag key="BROADCAST" name="BROADCAST" bit="3">When set, the message will be broadcast to all connected players.</flag>
</point>
<point name="target_push" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
This can be used to create jump pads and launch ramps. The direction of push can be set by the "angle", "angles" keys or pointing to a target_position or info_notnull entity. Unlike trigger_push, this is NOT client side predicted and must be activated by a trigger.
-------- KEYS --------
<angle key="angle" name="Yaw Angle">Yaw aiming angle of push entity.</angle>
<angles key="angles" name="Pitch Yaw Roll">This sets the pitch and yaw aiming angles of push entity (default 0 0). The roll angle does not apply.</angles>
<real key="speed" name="Push Speed" value="1000">Speed of push (default 1000). Has no effect if entity targets an aiming entity.</real>
<target key="target" name="Target">This points to the aiming entity to which the player will jump.</target>
<targetname key="targetname" name="Target Name">The activating trigger points to this. Push originates from the location of the trigger.</targetname>
-------- SPAWNFLAGS --------
<flag key="BOUNCEPAD" name="Bounce Sounds" bit="0">If set, trigger will play bounce noise instead of beep noise when activated (recommended).</flag>
-------- NOTES --------
To make a jump pad or launch ramp, create a trigger_multiple where the jump must originate. Place the target_push directly above the trigger_multiple and place the target_position entity at the highest point of the jump. Target the trigger_multiple to the target_push and target the target_push to the target_position/info_notnull (or set the target_push's "angle(s)" key). Note, that, when using aiming by target_position, it MUST be located higher, than target_push, while in "angle(s)" scenario player may be pushed downwards too.
</point>
<point name="target_relay" color="0 .7 .7" box="-8 -8 -8 8 8 8">
This can only be activated by other triggers which will cause it in turn to activate its own targets.
-------- KEYS --------
<target key="target" name="Target">This points to entities to activate when this entity is triggered.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
-------- SPAWNFLAGS --------
<flag key="RED_ONLY" name="null" bit="0">NULL</flag>
<flag key="BLUE_ONLY" name="null" bit="1">NULL</flag>
<flag key="RANDOM" name="Random Target" bit="2">One of the targeted entities will be triggered at random.</flag>

-------- NOTES --------
When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</point>
<point name="target_remove_powerups" color="0 .7 .7" box="-8 -8 -8 8 8 8">
This takes away any and all item_* type powerups from player except health and armor (holdable_* items are not taken away either). Must be activated by a button or trigger_multiple entity. The player that activates the trigger will lose any powerup(s) currently in his possession.
-------- KEYS --------
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
</point>
<point name="target_score" color="0 .5 0" box="-8 -8 -8 8 8 8">
This is used to automatically give frag points to the player who activates this. A spawn location entity like info_player_* or CTF respawn points can target this entity to give points to the player when he spawns in the game. Or a trigger can also be used to activate this. The activator of the trigger will get the points.
-------- KEYS --------
<targetname key="targetname" name="Target Name">Activating entity points to this.</targetname>
<integer key="count" name="Frags Given" value="1">Number of frag points to give to player (default 1) Can also substract points by -n.</integer>
</point>
<point name="target_secret" color="1 1 0" box="-8 -8 -8 8 8 8">
When triggered, marks the secret as 'found'
-------- KEYS --------
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<string key="message" name="Message">Text string to print on screen. If no message is set the default string will be printed 'You found a secret!'</string>
-------- SPAWNFLAGS --------
<flag key="SILENT" name="SILENT" bit="0">If the silent spawnflag is set, there won't be printed out any message when triggered.</flag>
</point>
<point name="target_speaker" color="0 .7 .7" box="-8 -8 -8 8 8 8">
Sound generating entity that plays .wav files. Normal non-looping sounds play each time the target_speaker is triggered. Looping sounds can be set to play by themselves (no activating trigger) or be toggled on/off by a trigger.
-------- KEYS --------
<sound key="noise" name="Sound File">Path/name of .wav file to play (e.g. sound/world/growl1.wav - see notes).</sound>
<real key="wait" name="Repeat Time">Delay in seconds between each time the sound is played ("random" key must be set - see notes).</real>
<real key="random" name="Repeat Time Variance">Random time variance in seconds added or subtracted from "wait" delay ("wait" key must be set - see notes).</real>
<targetname key="targetname" name="Target Name">The activating button or trigger points to this.</targetname>
-------- SPAWNFLAGS --------
<flag key="LOOPED_ON" name="Loop, Start On" bit="0">Sound will loop and initially start on in level (will toggle on/off when triggered).</flag>
<flag key="LOOPED_OFF" name="Loop, Start Off" bit="1">Sound will loop and initially start off in level (will toggle on/off when triggered).</flag>
<flag key="GLOBAL" name="No Distance Attenuation" bit="2">Sound will play full volume throughout the level.</flag>
<flag key="ACTIVATOR" name="Audible Only To Activator" bit="3">Sound will play only for the player that activated the target.</flag>
-------- NOTES --------
The path portion value of the "noise" key can be replaced by the implicit folder character "*" for triggered sounds that belong to a particular player model. For example, if you want to create a "bottomless pit" in which the player screams and dies when he falls into, you would place a trigger_multiple over the floor of the pit and target a target_speaker with it. Then, you would set the "noise" key to "*falling1.wav". The * character means the current player model's sound folder. So if your current player model is Visor, * = sound/player/visor, if your current player model is Sarge, * = sound/player/sarge, etc. This cool feature provides an excellent way to create "player-specific" triggered sounds in your levels.

The combination of the "wait" and "random" keys can be used to play non-looping sounds without requiring an activating trigger but both keys must be used together. The value of the "random" key is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).
</point>
<point name="target_teleporter" color="0 .5 0" box="-8 -8 -8 8 8 8">
Activating this will teleport players to the location of the targeted misc_teleporter_dest entity. Unlike trigger_teleport, this entity must be activated by a trigger and does NOT allow client prediction of events.
-------- KEYS --------
<target key="target" name="Target">This must point to a misc_teleporter_dest entity.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
-------- SPAWNFLAGS --------
<flag key="KEEP_SPEED" name="KEEP_SPEED" bit="0">Stores the speed at entering the teleporter and restores it at the destination.</flag>
</point>
<point name="target_startTimer" color="1 0 0" box="-8 -8 -8 8 8 8">
Starts defrag timer, when triggered. Usually is triggered by trigger_multiple with "wait" set to "-1" to prevent timer reset.
-------- KEYS --------
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
</point>
<point name="target_stopTimer" color="1 0 0" box="-8 -8 -8 8 8 8">
Stops defrag timer, when triggered.
-------- KEYS --------
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
</point>
<point name="target_checkpoint" color="1 0 0" box="-8 -8 -8 8 8 8">
Checkpoint of defrag timer. Is intended for detailed comparison of a run with the best one.
Utmost number of checkpoints, Defrag can consider, is 31 (32nd is used for finish).
-------- KEYS --------
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
</point>
<point name="target_fragsFilter" color="1 0 0" box="-8 -8 -8 8 8 8">
Frags filter is conditional entity, which fires its targets, when the player, triggering it, has appropriate count of frags. Frags in Defrag are obtained through activation of target_score.
-------- KEYS --------
<integer key="frags" name="Frags" value="1">Number of frags required to trigger the targeted entity (default 1).</integer>
<target key="target" name="Target">This points to entity to activate in case of correct score.</target>
<targetname key="targetname" name="Target Name">Trigger, activating frags filter, points to this.</targetname>
-------- SPAWNFLAGS --------
<flag key="REMOVER" name="REMOVER" bit="0">Removes from player's score the number of frags that was required to trigger the targeted entity.</flag>
<flag key="SILENT" name="SILENT" bit="2">Disables player warnings ("x more frags needed" messages).</flag>
<flag key="RESET" name="RESET" bit="3">Resets player's score to 0 after the targeted entity is triggered.</flag>
<flag key="MATCH" name="MATCH" bit="4">The player's score must be exactly equal to the frags value.</flag>
-------- NOTES --------
If the Frags Filter is not bound from a trigger, it becomes independent and is so always active.
Defrag is limited to 10 independent target_fragsFilters.
Independent frags filters are bugged: can't be triggered twice in single player mode (unless RESET flag is set); in multiplayer mode one player can block it for others.
Don't use such ones! Using trigger, connected to frags filter is highly recommended (trigger may be levelwide, if global behavior is required).
</point>
<point name="target_init" color="1 0 0" box="-8 -8 -8 8 8 8">
Removes various items from player.
-------- KEYS --------
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<target key="target" name="Target">This points to entities to activate when target_init is triggered.</target>
-------- SPAWNFLAGS --------
<flag key="KEEPARMOR" name="KEEPARMOR" bit="0">Keep armor.</flag>
<flag key="KEEPHEALTH" name="KEEPHEALTH" bit="1">Keep health.</flag>
<flag key="KEEPWEAPONS" name="KEEPWEAPONS" bit="2">Keep weapons.</flag>
<flag key="KEEPPOWERUPS" name="KEEPPOWERUPS" bit="3">Keep powerups (quad, enviro etc).</flag>
<flag key="KEEPHOLDABLE" name="KEEPHOLDABLE" bit="4">Keep holdable (medkit, teleporter).</flag>
<flag key="REMOVEMACHINEGUN" name="REMOVEMACHINEGUN" bit="5">Remove machinegun.</flag>
-------- NOTES --------
REMOVEMACHINEGUN has no effect if KEEPWEAPONS is ON.
</point>
<point name="target_speed" color="1 1 0" box="-8 -8 -8 8 8 8">
Sets the speed of the player.
If ADD is specified, negative values will reduce the speed.
-------- KEYS --------
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="speed" name="Speed" value="100">Speed value to set (default: 100).</real>
-------- SPAWNFLAGS --------
<flag key="PERCENTAGE" name="PERCENTAGE" bit="0">value is treated as percentage of current speed</flag>
<flag key="ADD" name="ADD" bit="1">adds the speed instead of setting it</flag>
<flag key="+X" name="+X" bit="2">takes positive X-direction into account</flag>
<flag key="-X" name="-X" bit="3">takes negative X-direction into account</flag>
<flag key="+Y" name="+Y" bit="4">takes positive Y-direction into account</flag>
<flag key="-Y" name="-Y" bit="5">takes negative Y-direction into account</flag>
<flag key="+Z" name="+Z" bit="6">takes positive Z-direction (up) into account</flag>
<flag key="-Z" name="-Z" bit="7">takes positive Z-direction (up) into account</flag>
<flag key="LAUNCHER" name="LAUNCHER" bit="8">will accelerate the player into the given direction (spawnflags)</flag>
-------- NOTES --------
If LAUNCHER isn't specified the player will only be accelerated if he is moving
while the target_speed is triggered, as the player needs a moving direction and this is
only given when he moves. LAUNCHER will split the given speed value to the given
directions. Note that only one of the spawnflags for each coordinate must be set. For
example if +X and -X is active the x-direction will be ignored. The same is the case
if whether +X nor -X is active. So if you want to accelerate the player up with 900u
you have to set the speed value to 900 and activate the spawnflags +Z and LAUNCHER.
</point>
<point name="target_earthquake" color="1 0 1" box="-8 -8 -8 8 8 8">
Starts an earthquake.
-------- KEYS --------
<real key="length" name="Duration Time" value="10">length in  seconds (2-32, in steps of 2)</real>
<real key="intensity" name="Intensity" value="8">strength of earthquake (1-16).</real>
</point>
<point name="target_effect" color="1 0 1" box="-8 -8 -8 8 8 8">
shows an animated environmental effect.
-------- KEYS --------
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<real key="count" name="count" value="100">Amount of emitted particles (max 255, default 100)</real>
<real key="speed" name="speed" value="100">Speed how fast the particles get emitted (default 100)</real>
-------- SPAWNFLAGS --------
<flag key="EXPLOSION" name="EXPLOSION" bit="0">The EXPLOSION spawnflag will cause the entity to show an explosion</flag>
<flag key="PARTICLES_GRAVITY" name="PARTICLES_GRAVITY" bit="1">The PARTICLES_GRAVITY spawnflag will cause the entity to show particles which are affected by gravity and drop to the ground</flag>
<flag key="PARTICLES_LINEAR" name="PARTICLES_LINEAR" bit="2">The PARTICLES_LINEAR spawnflag will cause the entity to show particles which are not affected by gravity and move in a straight line</flag>
<flag key="PARTICLES_LINEAR_UP" name="PARTICLES_LINEAR_UP" bit="3">let the linear particles move upwards</flag>
<flag key="PARTICLES_LINEAR_DOWN" name="PARTICLES_LINEAR_DOWN" bit="4">let the linear particles move downwards</flag>
-------- NOTES --------
</point>
<point name="target_music" color="1 0 1" box="-8 -8 -8 8 8 8">
Sets the current music track to be played.
-------- KEYS --------
<sound key="music" name="Music File">path/name of looping .wav file used for level's music (eg. music/sonic5.wav).</sound>
<targetname key="targetname" name="Target Name">The activating button or trigger points to this.</targetname>
-------- NOTES --------
Setting an empty music key or completely omitting it will make the music stop playing.
</point>
<point name="team_CTF_blueflag" color="0 .2 1" box="-16 -16 -16 16 16 16" model="models/flags/b_flag.md3">
Blue flag for FASTCAP gametype.
</point>
<point name="team_CTF_redflag" color="1 .2 0" box="-16 -16 -16 16 16 16" model="models/flags/r_flag.md3">
Red flag for FASTCAP gametype.
</point>
<point name="trigger_always" color=".5 .5 .5" box="-8 -8 -8 8 8 8">
Automatic trigger. It will fire the entities it targets as soon as it spawns in the game.
-------- KEYS --------
<target key="target" name="Target">This points to the entity to activate.</target>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
-------- NOTES --------
When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</point>
<group name="trigger_hurt" color=".8 .4 .4">
Any player that touches this will be hurt by "dmg" points of damage once per server frame (very fast). A sizzling sound is also played while the player is being hurt.
-------- KEYS --------
<integer key="dmg" name="Damage Inflicted" value="5">Number of points of damage inflicted to player per server frame (default 5 - integer values only).</integer>
-------- SPAWNFLAGS --------
<flag key="START_OFF" name="Start Disabled" bit="0">Needs to be triggered (toggle) for damage</flag>
<flag key="TOGGLE" name="Toggle" bit="1">Allows trigger_hurt to be toggled on/off.</flag>
<flag key="SILENT" name="Silent" bit="2">Suppresses the sizzling sound while player is being hurt.</flag>
<flag key="NO_PROTECTION" name="No Powerup Protection" bit="3">Player will be hurt regardless of protection (see notes).</flag>
<flag key="SLOW" name="Damage Once Per Second" bit="4">Changes the damage rate to once per second.</flag>
-------- NOTES --------
The invulnerability power-up (item_enviro) does not protect the player from damage caused by this entity regardless of whether the NO_PROTECTION spawnflag is set or not. Triggering a trigger_hurt will have no effect if the START_OFF spawnflag is not set. A trigger_hurt always starts on in the game.
</group>
<group name="trigger_multiple" color=".5 .5 .5">
Variable size repeatable trigger. It will fire the entities it targets when touched by player. Can be made to operate like a trigger_once entity by setting the "wait" key to -1. It can also be activated by another trigger that targets it.
-------- KEYS --------
<real key="wait" name="Repeat Time" value="0.5">Time in seconds until trigger becomes re-triggerable after it's been touched (default 0.5, -1 = trigger once).</real>
<real key="random" name="Repeat Time Variance" value="0">Random time variance in seconds added or subtracted from "wait" delay (default 0 - see notes).</real>
<target key="target" name="Target">This points to the entity to activate.</target>
<targetname key="targetname" name="Target Name">Activating trigger points to this.</targetname>
<texture key="targetShaderName" name="Target Shader Name">Name of the original shader to remap (see notes).</texture>
<texture key="targetShaderNewName" name="Target Shader New Name">Name of the new shader to remap by (see notes).</texture>
-------- NOTES --------
When the random key is set, its value is used to calculate a minimum and a maximum delay. The final time delay will be a random value anywhere between the minimum and maximum values: (min delay = wait - random) (max delay = wait + random).

When the entity activates its targets, all shaders/textures in the map that were originally the same name as the 'targetShaderName' value, will be changed to the 'targetShaderNewName' value. For example, turning a light on:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_on"
And this would turn it back off:
 "targetShaderName"    "textures/proto2/redlight_off"
 "targetShaderNewName" "textures/proto2/redlight_off"
</group>
<group name="trigger_push" color="0 .5 .5">
This is used to create jump pads and launch ramps. It MUST point to a target_position or info_notnull entity, located above trigger's origin, to work. Unlike target_push, this is client side predicted.
-------- KEYS --------
<target key="target" name="Target">This points to the target_position to which the player will jump.</target>
-------- NOTES --------
To make a jump pad or launch ramp, place the target_position/info_notnull entity at the highest point of the jump and target it with this entity.
</group>
<group name="trigger_push_velocity" color="0 .5 .5">
This is used to create jump pads and launch ramps. It MUST point to a target_position or info_notnull entity, located above trigger's origin, to work. Unlike target_push, this is client side predicted. This is similar to a jumppad, however, it may be configured to add to the player's velocity, as opposed to just setting it.
-------- KEYS --------
<target key="target" name="Target">This points to the target_position to which the player will jump.</target>
<real key="speed" name="Playerdir XY speed" value="0">XY speed for player-directional velocity pads - either sets or adds to the player's horizontal velocity.</real>
<real key="count" name="Playerdir Z speed" value="0">Z speed for player-directional velocity pads - either sets or adds to the player's vectical velocity.</real>
-------- SPAWNFLAGS --------
<flag key="PLAYERDIR_XY" name="PLAYERDIR_XY" bit="0">If set, trigger will apply the horizontal speed in the player's horizontal direction of travel, otherwise it uses the target XY component.</flag>
<flag key="ADD_XY" name="ADD_XY" bit="1">If set, trigger will add to the player's horizontal velocity, otherwise it sets the player's horizontal velociy.</flag>
<flag key="PLAYERDIR_Z" name="PLAYERDIR_Z" bit="2">If set, trigger will apply the vertical speed in the player's vertical direction of travel, otherwise it uses the target Z component.</flag>
<flag key="ADD_Z" name="ADD_Z" bit="3">If set, trigger will add to the player's vertical velocity, otherwise it sets the player's vectical velociy.</flag>
<flag key="BIDIRECTIONAL_XY" name="BIDIRECTIONAL_XY" bit="4">If set, non-playerdir velocity pads will function in 2 directions based on the target specified. The chosen direction is based on the current direction of travel. Applies to horizontal direction.</flag>
<flag key="BIDIRECTIONAL_Z" name="BIDIRECTIONAL_Z" bit="5">If set, non-playerdir velocity pads will function in 2 directions based on the target specified. The chosen direction is based on the current direction of travel. Applies to vertical direction.</flag>
<flag key="CLAMP_NEGATIVE_ADDS" name="CLAMP_NEGATIVE_ADDS" bit="6">If set, then a velocity pad that adds negative velocity will be clamped to 0, if the resultant velocity would bounce the player in the opposite direction.</flag>
-------- NOTES --------
To make a jump pad or launch ramp, place the target_position/info_notnull entity at the highest point of the jump and target it with this entity.
</group>
<group name="trigger_physics" color="0 .5 .5">
a trigger_brush volume that affect clients physics as long as inside the volume, restores when leave the bounds.
-------- KEYS --------
<real key="wait" name="Repeat Time" value="0.5">Time in seconds until trigger becomes re-triggerable after it's been touched (default 0.5, -1 = trigger once).</real>
<real key="random" name="Repeat Time Variance" value="0">Random time variance in seconds added or subtracted from "wait" delay (default 0 - see notes).</real>
<target key="target" name="Target">This points to the target_position to which the player will jump.</target>
<string key="parameter" name="Parameter">Parameter that want to modify. 'speed', 'gravity' or 'friction'</string>
<real key="value" name="Value" value="0">Altered Value that overrides the default.</real>
-------- NOTES --------
a trigger_physics can modify three values, but not combined at the same time.
</group>
<group name="trigger_teleport" color=".5 .5 .5">
Touching this will teleport players to the location of targeted entity. Allows client side prediction of teleportation events.
-------- KEYS --------
<target key="target" name="Target">This must point to a misc_teleporter_dest entity.</target>
-------- SPAWNFLAGS --------
<flag key="SPECTATOR" name="SPECTATOR" bit="0">If spectator is set, only spectators can use this teleport. Spectator teleporters are not normally placed in the editor, but are created automatically near doors to allow spectators to move through them.</flag>
<flag key="KEEP_SPEED" name="KEEP_SPEED" bit="1">Stores the speed at entering the teleporter and restores it at the destination.</flag>
</group>
<point name="weapon_bfg" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/bfg/bfg.md3">
Big Freaking Gun.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="20">Sets the amount of ammo given to the player when weapon is picked up (default 20, -1 for 0 count).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="weapon_gauntlet" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/gauntlet/gauntlet.md3">
Gauntlet.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="weapon_grapplinghook" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/grapple/grapple.md3">
Grappling Hook. 
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
<weapon_grapplinghook_types key="speed" name="Hook Type" value="0">Hook type.
   0 : Quake3 (default)
   1 : Tarzan
   2 : Pendulum
   3 : Quake2
</weapon_grapplinghook_types>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="weapon_grenadelauncher" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/grenadel/grenadel.md3">
Grenade Launcher.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="10">Sets the amount of ammo given to the player when weapon is picked up (default 10, -1 for 0 count).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="weapon_lightning" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/lightning/lightning.md3">
Lightning Gun.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="100">Sets the amount of ammo given to the player when weapon is picked up (default 100, -1 for 0 count).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
<boolean key="speed" name="Knockback">When set to 1, the gun will have splash in Defrag, resulting in ability to get knockback from own shots, like with plasma gun for example.</boolean>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="weapon_machinegun" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/machinegun/machinegun.md3">
Machine Gun.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="40">Sets the amount of ammo given to the player when weapon is picked up (default 40, -1 for 0 count).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="weapon_plasmagun" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/plasma/plasma.md3">
Plasma gun.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="50">Sets the amount of ammo given to the player when weapon is picked up (default 50, -1 for 0 count).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="weapon_railgun" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/railgun/railgun.md3">
Railgun.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="10">Sets the amount of ammo given to the player when weapon is picked up (default 10, -1 for 0 count).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="weapon_rocketlauncher" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/rocketl/rocketl.md3">
Rocket Launcher.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="10">Sets the amount of ammo given to the player when weapon is picked up (default 10, -1 for 0 count).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<point name="weapon_shotgun" color="1 0 .5" box="-16 -16 -16 16 16 16" model="models/weapons2/shotgun/shotgun.md3">
Shotgun.
-------- KEYS --------
<real key="wait" name="Respawn Delay" value="5">Time in seconds before item respawns after being picked up (default 5, -1 = never respawn).</real>
<integer key="count" name="Ammo Given" value="10">Sets the amount of ammo given to the player when weapon is picked up (default 10, -1 for 0 count).</integer>
<string key="team" name="Team Name">Set this to team items. Teamed items will respawn randomly after team master is picked up (see notes).</string>
<target key="target" name="Target">Picking up the item will trigger the entity this points to.</target>
<targetname key="targetname" name="Target Name">A target_give entity, pointed to this, gives the item to player. Activating this by other entities will make the item to respawn.</targetname>
-------- SPAWNFLAGS --------
<flag key="SUSPENDED" name="No Drop To Floor" bit="0">Item will spawn where it was placed in map and won't drop to the floor.</flag>
</point>
<group name="worldspawn" color="0 0 0">
Entity, which stores regular static map primitives (brushes and patches).
-------- KEYS --------
<string key="message" name="Map enter message">Text to print when enter map. Used for name of level.</string>
<sound key="music" name="Music File">Path/name of looping .wav file used for level's music (e.g. music/sonic5.wav).</sound>
<real key="gravity" name="Gravity" value="800">Gravity of level (default normal gravity: 800).</real>
-------- Q3MAP2 KEYS --------
<integer key="gridsize" name="Dynamic Light Granularity" value="64 64 128">Granularity of the lightgrid, created by q3map, which is used to dynamically light certain game objects, like players and items. Value is three integers separated by spaces, representing number of units between grid points in X Y Z. Default gridsize value is 64 64 128. Use larger powers of 2 to reduce BSP size and compile time on very large maps.</integer>
<integer key="_blocksize" name="BSP Block Size" value="1024 1024 1024">Map compiler splits the BSP tree along axial planes (X, Y and Z) for optimization. It does it as often, as specified in _blocksize key for respective axis (in units) (default 1024 1024 1024, 0 = disable, setting single value 'N' equals to setting 'N N N'). I.e. lower values result in more splits and vice versa. Increase the blocksize using larger powers of 2 to reduce compile times on very large maps with a low structural brush density. Maps, having flat architecture, might work better with horizontal splits disabled ('N N 0').</integer>
<real key="_ambient" name="Ambient Intensity" value="0">Adds a constant value to overall lighting (default 0, range 0 - 255). Only recommended use is small values for cosmetic purposes, as high values will have a tendency to flatten out variations in light and shade.</real>
<color key="_color" name="Ambient Color" value="1 1 1">RGB color value for ambient and other global light parameters (default is 1 1 1).</color>
<real key="_minlight" name="Min Lightmap Intensity" value="0">Minimum light value, levelwide. Uses the _color key to set color. Since it does not add unlike ambient, but overrides existing light values, affected areas will get flat constant light. Therefore use is highly not recommended!</real>
<real key="_minvertexlight" name="Min Vertex Intensity" value="0">Minimum vertex lighting, levelwide.</real>
<real key="_mingridlight" name="Min Dynamic Intensity" value="0">Minimum lightgrid (dynamic entity lighting) levelwide.</real>
<boolean key="_keeplights" name="Keep Light Entities">Keep light entities in the BSP. Normally stripped out by the BSP process and read from the .map file by the lighting phase.</boolean>
<boolean key="_noshadersun" name="Ignore Shader Sun">Ignore q3map_sun/sun directives in sky shaders and ONLY use entity sun lights.</boolean>
<real key="_farplanedist" name="Far Clip Distance">Limit on how many units the vis phase of compilation can see. Used in combination with level-wide fog, it can help reduce r_speeds on large, open maps.</real>
<texture key="_foghull" name="Fog Hull Shader">Shader to use for "fog hull". Foghull shader should be a sky shader. Omit the "textures/" prefix.</texture>
<real key="_lightmapscale" name="Lightmap Scale" value="1">Floating point value, scaling the resolution of lightmaps on brushes/patches in the world. Can be overridden in func_group (or other entities) (default 1.0).</real>
<integer key="_castshadows" name="Shadow Caster Level" value="1">Allows per-entity control over shadow casting. Defaults to 0 on entities, 1 on world. 0 = no shadow casting. 1 = cast shadows on world. &gt; 1 = cast shadows on entities with _rs (or _receiveshadows) with the corresponding value, AND world. Negative values imply same, but DO NOT cast shadows on world.</integer>
<integer key="_receiveshadows" name="Shadow Receiver Level" value="1">Allows per-entity control over shadow reception. Defaults to 1 on everything (world shadows). 0 = receives NO shadows. &gt; 1 = receive shadows only from corresponding keyed entities (see above) and world. &lt; 1 = receive shadows ONLY from corresponding keyed entities.</integer>
<texture key="_celshader" name="Cel Shader">Sets the cel shader used for this geometry. Note: Omit the "textures/" prefix.</texture> Overridable in entities.
<string key="_styleNalphaGen" name="Style Light alphaGen">*IMPORTANT* Replace "N" in the key "_styleNalphaGen" with an integer between 1 and 31 as your style index. Values takes standard shader waveform functions (e.g. wave sin 0.5 0.3 0.25 1.5)</string>
<string key="_styleNrgbGen" name="Style Light rgbGen">*IMPORTANT* Replace "N" in the key "_styleNrgbGen" with an integer between 1 and 31 as your style index. Values take standard shader waveform functions (e.g. wave sin 0.5 0.3 0.25 1.5)</string>
-------- Q3MAP2 TERRAIN KEYS --------
<texture key="_indexmap" name="Terrain Blending Map">Path/name for the art file used to guide the mapping of textures on the terrain surface.</texture>
<integer key="_layers" name="Terrain Layers">Number of unique root shaders that will be used on the terrain.</integer>
<texture key="_shader" name="Terrain MetaShader">Path to the metashader used to assign textures to the terrain entity. Note: Omit the "textures/" prefix.</texture>
</group>
</classes>